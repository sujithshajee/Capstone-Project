---
apiVersion: eksctl.io/v1alpha5
kind: ClusterConfig

metadata:
  name: eks-cluster-capstone # name of cluster
  region: us-east-1
  version: "1.21" # kubernetes version
vpc: # Refer: https://github.com/weaveworks/eksctl/blob/main/examples/04-existing-vpc.yaml
  id: "vpc-xxxxxxxxxxxxxxxxx"
  subnets:
    public:
      public-net-captsone-a:
        id: "subnet-xxxxxxxxxxxxxxxxx"
        az: "us-east-1a"
      public-net-captsone-b:
        id: "subnet-xxxxxxxxxxxxxxxxx"
        az: "us-east-1b"
    private:
      private-net-captsone-a:
        id: "subnet-xxxxxxxxxxxxxxxxx"
        az: "us-east-1a"
      private-net-captsone-b:
        id: "subnet-xxxxxxxxxxxxxxxxx"
        az: "us-east-1b"
  clusterEndpoints:
    publicAccess:  true
    privateAccess: true
  nat:
    gateway: Disable # disable since already created

iam: # Refer: https://eksctl.io/usage/iamserviceaccounts/
  withOIDC: true
  serviceAccounts: # pre-including some common iamserviceaccounts
  - metadata:
      name: aws-load-balancer-controller
      namespace: kube-system
    wellKnownPolicies:
      awsLoadBalancerController: true
  - metadata:
      name: ebs-csi-controller-sa
      namespace: kube-system
    wellKnownPolicies:
      ebsCSIController: true
  - metadata:
      name: efs-csi-controller-sa
      namespace: kube-system
    wellKnownPolicies:
      efsCSIController: true
  - metadata:
      name: external-dns
      namespace: kube-system
    wellKnownPolicies:
      externalDNS: true
  - metadata:
      name: cert-manager
      namespace: cert-manager
    wellKnownPolicies:
      certManager: true
  - metadata:
      name: cluster-autoscaler
      namespace: kube-system
      labels: {aws-usage: "cluster-ops"}
    wellKnownPolicies:
      autoScaler: true

nodeGroups: # Refer: https://github.com/weaveworks/eksctl/blob/main/examples/05-advanced-nodegroups.yaml
  - name: pub-nodegroup-capstone-a-2
    labels: { role: workers }
    taints:
      - key: nodeapp
        value: "true"
        effect: NoSchedule 
    tags:
      k8s.io/cluster-autoscaler/enabled: "true"
      k8s.io/cluster-autoscaler/eks-cluster-capstone: "shared"
    instancesDistribution:
      instanceTypes:
        - t2.medium
    desiredCapacity: 1
    minSize: 0
    maxSize: 5
    subnets:
      - public-net-captsone-b      